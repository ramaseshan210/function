{"version":3,"sources":["Forms.js","Header.js","Button.js","Ram.js","CustomSelect.js","Use.js","App.js","reportWebVitals.js","index.js"],"names":["Forms","state","colour","label","border","check","load","handle","event","console","log","target","value","setState","name","getValue","loadValue","condition","className","type","this","onChange","Switch","color","size","checked","class","disabled","style","borderRadius","backgroundColor","Component","Header","to","Button","props","side","background","Ram","useState","CustomSelect","options","Use","setColour","setstate","setCond","render","variant","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e0bbca3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Forms.css'\r\nimport Switch from  '@material-ui/core/Switch';\r\n\r\n\r\n\r\nclass Forms extends Component {\r\n\r\n  \r\n \r\n state={\r\n        colour:\"\",\r\n        label:\"\",\r\n        border: 0,\r\n        check:false,\r\n        load:false ,\r\n    \r\n    }\r\n       \r\n\r\n\r\n    handle =(event)=>{\r\n        console.log(event.target.value)\r\n      this.setState({\r\n          [event.target.name]:event.target.value\r\n      });\r\n    };  \r\n   \r\n\r\n    getValue = (event) => {\r\n            \r\n         \r\n            if(this.state.check===false)\r\n            {   \r\n              this.setState({\r\n                  [event.target.name]:true,\r\n                \r\n              });\r\n            }\r\n            else\r\n                {\r\n                 this.setState({\r\n                    [event.target.name]:false,\r\n                    \r\n                 });  \r\n                 \r\n                 }     \r\n                    \r\n                \r\n                };\r\n\r\n       loadValue=(event)=>{\r\n\r\n        if(this.state.check===false)\r\n        {\r\n           if(this.state.load===false)\r\n           {\r\n               this.setState({\r\n                   [event.target.name]:true,\r\n                 \r\n\r\n               });\r\n               this.condition=1;\r\n            }\r\n            else\r\n               {\r\n                   this.setState({\r\n                       [event.target.name]:false,\r\n                   });\r\n                   this.condition=0;\r\n               }\r\n\r\n            }\r\n            \r\n            else if(this.state.check===true)\r\n            {\r\n                if(this.state.load===true)\r\n                {\r\n                    this.setState({\r\n                        [event.target.name]:false,\r\n                    });\r\n                    this.condition=0;\r\n                }\r\n                else if(this.state.load===false)\r\n                {\r\n                    this.setState({\r\n                        [event.target.name]:true\r\n                    })\r\n                    this.condition=1;\r\n                }\r\n            }\r\n           };\r\n                \r\n\r\n      \r\n                \r\n      \r\n    \r\n \r\nrender(){\r\n\r\n    \r\n        return (\r\n        <div className=\"body\">\r\n            <div className=\"container\">\r\n               \r\n                <div className=\"lbn\">\r\n                <label>input</label>\r\n                <input type=\"text\" name=\"colour\"value={this.state.colour} onChange={this.handle}></input></div>\r\n\r\n                <div className=\"lbn\">\r\n                <label>label</label>\r\n                <input type=\"text\"  name=\"label\"value={this.state.label} onChange={this.handle}></input></div>\r\n\r\n                <div className=\"lbn\">\r\n                <label>border radius</label>\r\n                <input type=\"number\"  name=\"border\"value={this.state.border} onChange={this.handle}></input></div>\r\n                \r\n        \r\n                  \r\n                <div className=\"lbn\">\r\n                <Switch \r\n                color=\"primary\"\r\n                size =\"large\"\r\n                checked={this.state.check}\r\n                name=\"check\"\r\n                onChange={this.getValue}/>\r\n                </div>\r\n                <div className=\"lbn\">\r\n                <Switch     \r\n                color=\"primary\"\r\n                size =\"large\"\r\n                checked={this.state.load}\r\n                name=\"load\"  \r\n                onChange={this.loadValue}/>\r\n                </div>\r\n            </div>\r\n            <div class=\"side\">\r\n            <button disabled={ this.condition===1 ? this.state.load : this.state.check} style={{ borderRadius: `${this.state.border}px`, backgroundColor: this.state.colour}}>{this.state.label}</button>\r\n            </div>\r\n       \r\n        </div>\r\n        );\r\n    }\r\n};  \r\n\r\n\r\n\r\nexport default Forms","import React from 'react'\r\nimport './Header.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/ram\">About</Link>\r\n            <Link to=\"/use\">Use</Link>\r\n           \r\n        </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nconst styles = {\r\n   \r\n}\r\n\r\n\r\nfunction Button(props) {\r\n\r\n    if(props.colour===\"red\")\r\n    {\r\n        console.log(\"blue\");\r\n    }\r\n\r\n    if(props.side===\"left\")\r\n    {\r\n        console.log(\"hello\");\r\n    }\r\n    else{\r\n        console.log(\"hehehe\");\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <button  style={{background:props.colour}}>hello aid</button>\r\n        \r\n       \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Button from './Button'\r\nimport React,{useState} from 'react'\r\nimport Select from 'react-select';\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport {BounceLoader} from 'react-spinners'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction Ram() {\r\n\r\n  \r\n\r\n    const [colour,setColour] = useState(\"red\");\r\n    const [side,setSide]=useState(\"right\");\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button colour={colour} side={side}/>\r\n            \r\n            \r\n           \r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Ram\r\n","import React from 'react'\r\nimport Select from 'react-select';\r\nimport './Forms'\r\n\r\n\r\n\r\n\r\n\r\nfunction CustomSelect({style,options,onChange,defaultValue}) {\r\n    return (\r\n        <div style={style} >\r\n           <Select  options={options} onChange={onChange} defaultValue={defaultValue}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomSelect\r\n","import React,{useState} from 'react'\r\nimport './Forms.css'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Select from 'react-select';\r\nimport { render } from '@testing-library/react';\r\nimport { Button } from '@material-ui/core';\r\nimport CustomSelect from './CustomSelect';\r\nimport ClipLoader from \"react-spinners/ClipLoader\"\r\n\r\n\r\n\r\n\r\n\r\nconst options = [ \r\n    {value:\"primary\", label: \"primary\"},\r\n    {value:\"secondary\",label:\"secondary\"},\r\n    {value:\"default\", label:\"default\"}\r\n\r\n]\r\n\r\n\r\nconst styless = {\r\n select: {\r\n        maxwidth:600,\r\n         width:'100% ',\r\n\r\n }\r\n}\r\n\r\n\r\n\r\nfunction Use() {\r\n\r\n\r\n    const [colour,setColour] = useState(\"\");\r\n\r\n  \r\nconst [state, setstate] = useState({\r\n   \r\n    label:\"\",\r\n    border: 0,\r\n    check:false,\r\n    load:false ,\r\n\r\n}\r\n   );   \r\n const [condition,setCond] = useState(0);\r\n\r\n\r\n\r\n\r\n \r\n const hindle=(event)=>{\r\n        \r\n    setColour(\r\n\r\n    [event.name]=event.value,\r\n    console.log(event.label));\r\n    console.log(event.value);\r\n\r\n }\r\n\r\n  const handle =(event)=>{\r\n    console.log(event.target.value)\r\n  setstate({\r\n\r\n    ...state,\r\n     [event.target.name]:event.target.value,\r\n  });\r\n};  \r\n  \r\n\r\n const getValue = (event) => {\r\n            \r\n         \r\n    if(state.check===false)\r\n    { \r\n      setstate({\r\n          ...state,\r\n          [event.target.name]:true,\r\n        \r\n      });\r\n    }\r\n    else\r\n        {\r\n          \r\n         setstate({\r\n             ...state,\r\n            [event.target.name]:false,\r\n            \r\n         });  \r\n         \r\n         }     \r\n            \r\n        \r\n        };\r\n\r\n\r\n      const loadValue= (event)=>{\r\n       \r\n            if(state.check===false)\r\n            {\r\n               if(state.load===false)\r\n               {\r\n                   setstate({\r\n                       ...state,\r\n                       [event.target.name]:true,\r\n                     \r\n    \r\n                   });\r\n                  setCond(1);\r\n                   console.log(condition);\r\n                }\r\n                else\r\n                   {\r\n                       setstate({\r\n                           ...state,\r\n                           [event.target.name]:false,\r\n                       });\r\n                       setCond(0);\r\n                       console.log(condition);\r\n                   }\r\n    \r\n                }\r\n                \r\n                else if(state.check===true)\r\n                {\r\n                    if(state.load===true)\r\n                    {\r\n                        setstate({\r\n                            ...state,\r\n                            [event.target.name]:false,\r\n                        });\r\n                        setCond(0);\r\n                    }\r\n                    else if(state.load===false)\r\n                    {\r\n                        setstate({\r\n                            ...state,\r\n                            [event.target.name]:true\r\n                        });\r\n                      setCond(1)\r\n                    }\r\n                }\r\n               };\r\n\r\n           const    onChangeInput =(value)=>{\r\n                   console.log(value);\r\n\r\n               }\r\n\r\n     \r\n        render()       \r\n    return (\r\n        <div>\r\n            <div className=\"body\">\r\n\r\n             \r\n     <div className=\"container\">\r\n                    \r\n          <div className=\"lbn\">\r\n                    \r\n                <label>input</label>\r\n                <Select  className=\"select\"  type=\"text\"  name=\"colour\"options={options} onChange={hindle}/></div>\r\n            \r\n                \r\n         <div className=\"lbn\">\r\n                <label>label</label>\r\n                <input type=\"text\"  name=\"label\"value={state.label} onChange={handle}></input></div>\r\n\r\n         <div className=\"lbn\">\r\n                <label>border radius</label>\r\n                <input type=\"number\"  name=\"border\"value={state.border} onChange={handle}></input></div>\r\n \r\n                    \r\n                  \r\n        <div className=\"lbn\">\r\n                <label className=\"labelClass\">disabled</label>\r\n                <Switch \r\n                className=\"switchMargin\"\r\n                color=\"primary\" \r\n                size =\"small\"\r\n                checked={state.check}\r\n                name=\"check\"\r\n                onChange={getValue}/>\r\n        </div>\r\n        <div className=\"lbn\">\r\n                <label   className=\"labelClass\">loading</label>\r\n                <span></span>\r\n                <Switch   \r\n                className=\"switchMargin\"  \r\n                color=\"primary\"\r\n                size =\"small\"\r\n                checked={state.load}\r\n                name=\"load\"  \r\n                onChange={loadValue}/>\r\n         </div>\r\n            </div>\r\n            <div className=\"side\">\r\n           <Button  type=\"text\" variant=\"contained\" color={colour} disabled={ state.check} style={{ borderRadius: `${state.border}px`}}> {state.load===true && state.check===false && <ClipLoader/>}\r\n            {state.check===true&& state.load===false || state.check===false && state.load===false|| state.check===true && state.load===true? state.label : !state.label}</Button>\r\n           \r\n            </div>\r\n        \r\n       \r\n        </div>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Use\r\n","import React, { Component } from 'react'\nimport './App.css';\n\nimport Forms from \"./Forms\"\nimport Header from \"./Header\"\nimport Django from \"./Django\"\nimport Ram from \"./Ram\"\nimport Use from './Use';\n\nimport {BrowserRouter as Router, Switch,  Route } from \"react-router-dom\"; \n\n\n\nclass App extends Component {\n \n \n\n\n\n\n\n\n   render(){\n      return (\n         <div>\n\n   \n            <Router>\n               <Header/>\n               <Switch>\n               <Route exact path=\"/\"component={Forms}/>\n                  <Route exact path=\"/ram\"component={Ram}/>\n                  <Route exact path=\"/use\"component={Use}/>\n                  </Switch>\n   </Router>\n\n\n\n\n\n\n        \n \n           \n         </div>\n      );\n   }\n}  \n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}